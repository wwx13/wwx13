(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{677:function(n,s,e){"use strict";e.r(s);var t=e(44),i=Object(t.a)({},(function(){var n=this.$createElement,s=this._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('\n置换： 置换的特色是对输入变量做原地修改，以减少内存开销。\n很多时候我们希望减少内存开销，那么就可以考虑进行元素替换、交换，只修改原变量不引入\n更多变量以此达到目的\n\nclass Solution:\n    def firstMissingPositive(self, nums: List[int]) -> int:\n        if not nums: return 1\n        nums = set(nums)\n\n        nums = [i for i in nums if i > 0]\n        pos_len = len(nums)\n        # nums = [i for i in nums if i <= pos_len]\n        for idx, val in enumerate(nums):\n            while val != idx + 1 and val <= len(nums):\n                temp = nums[val - 1]\n                nums[val - 1] = val\n                nums[idx] = temp\n                val = nums[idx]\n        # print("nes", nums)\n        for idx, val in enumerate(nums):\n            if idx + 1 != val:\n                return idx + 1\n        return len(nums) + 1\n\n\n')])])]),s("p",[s("a",{attrs:{href:"https://leetcode.cn/problems/first-missing-positive/submissions/",target:"_blank",rel:"noopener noreferrer"}},[this._v("练手题目"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=i.exports}}]);