(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{511:function(t,n,e){t.exports=e.p+"assets/img/dbscan.10b8df3e.png"},647:function(t,n,e){"use strict";e.r(n);var s=e(44),r=Object(s.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"dbscan"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dbscan"}},[t._v("#")]),t._v(" DBSCAN")]),t._v(" "),s("p",[t._v("DBSCAN的算法步骤分成两步。")]),t._v(" "),s("p",[t._v("1，寻找核心点形成临时聚类簇。")]),t._v(" "),s("p",[t._v("扫描全部样本点，如果某个样本点R半径范围内点数目>=MinPoints，则将其纳入核心点列表，并将其密度直达的点形成对应的临时聚类簇。")]),t._v(" "),s("p",[t._v("2，合并临时聚类簇得到聚类簇。")]),t._v(" "),s("p",[t._v("对于每一个临时聚类簇，检查其中的点是否为核心点，如果是，将该点对应的临时聚类簇和当前临时聚类簇合并，得到新的临时聚类簇。")]),t._v(" "),s("p",[t._v("重复此操作，直到当前临时聚类簇中的每一个点要么不在核心点列表，要么其密度直达的点都已经在该临时聚类簇，该临时聚类簇升级成为聚类簇。")]),t._v(" "),s("p",[t._v("继续对剩余的临时聚类簇进行相同的合并操作，直到全部临时聚类簇被处理。")]),t._v(" "),s("p",[s("img",{attrs:{src:e(511),alt:"dbscan"}})]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/336501183",target:"_blank",rel:"noopener noreferrer"}},[t._v("ref"),s("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=r.exports}}]);